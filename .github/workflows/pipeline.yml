name: Pull request to master workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
permissions:
  contents: read

jobs:
  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: 🐍 Step 0 - Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: 💾 Step 1 - Install flake8
      run: |
        pip install flake8
    - name: ❄️ Step 2 - Lint with flake8
      run: |
        flake8 . --count --ignore=F811 --max-line-length=127 --show-source --statistics
   
  build:
    name: Build & Test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: 🐍 Step 0 - Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: 🔗 Step 1 - Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        brew install allure
    - name: 📂 Step 2 - Create a temp artifact folder named `output`
      run: |
        mkdir output
    - name: 🧪 Step 3 - Run Behave with Allure folder inside `output` folder + PyTest
      run: |
        export TRELLO_APIKEY=${{secrets.TRELLO_APIKEY}}
        export TRELLO_TOKEN=${{secrets.TRELLO_TOKEN}}
        behave -f allure_behave.formatter:AllureFormatter -o output ./tests/api/features
        pytest
    - name: 📊 Step 4 - Collect Allure files and generate allure-report folder
      if: always()
      run: |
        allure generate output/
    - name: 💻 Step 5 - Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        PERSONAL_TOKEN: ${{ secrets.MY_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-report
    - name: 🗒️ Step 6 - Save Logs
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: logs
        retention-days: 5
